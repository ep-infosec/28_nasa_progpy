
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/state_limits.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_state_limits.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_state_limits.py:


Example demonstrating when and how to identify model state limits. 

.. GENERATED FROM PYTHON SOURCE LINES 7-69

.. code-block:: default


    from prog_models.models.thrown_object import ThrownObject
    from math import inf

    def run_example():
        # Demo model
        # Step 1: Create instance of model (without drag)
        m = ThrownObject( cd = 0 )

        # Step 2: Setup for simulation 
        def future_load(t, x=None):
            return {}

        # add state limits
        m.state_limits = {
            # object may not go below ground height
            'x': (0, inf),

            # object may not exceed the speed of light
            'v': (-299792458, 299792458)
        }

        # Step 3: Simulate to impact
        event = 'impact'
        simulated_results = m.simulate_to_threshold(future_load, threshold_keys=[event], dt=0.005, save_freq=1)
    
        # Print states
        print('Example 1')
        for i, state in enumerate(simulated_results.states):
            print(f'State {i}: {state}')
        print()

        # Let's try setting x to a number outside of its bounds
        x0 = m.initialize(u = {}, z = {})
        x0['x'] = -1

        simulated_results = m.simulate_to_threshold(future_load, threshold_keys=[event], dt=0.005, save_freq=1, x = x0)

        # Print states
        print('Example 2')
        for i, state in enumerate(simulated_results.states):
            print('State ', i, ': ', state)
        print()

        # Let's see what happens when the objects speed aproaches its limit
        x0 = m.initialize(u = {}, z = {})
        x0['x'] = 1000000000
        x0['v'] = 0
        m.parameters['g'] = -50000000
    
        print('Example 3')
        simulated_results = m.simulate_to_threshold(future_load, threshold_keys=[event], dt=0.005, save_freq=0.3, x = x0, print = True, progress = False)

        # Note that the limits can also be applied manually using the apply_limits function
        print('limiting states')
        x = {'x': -5, 'v': 3e8}  # Too fast and below the ground
        print('\t Pre-limit: {}'.format(x))
        x = m.apply_limits(x)
        print('\t Post-limit: {}'.format(x))

    # This allows the module to be executed directly 
    if __name__=='__main__':
        run_example()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_state_limits.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: state_limits.py <state_limits.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: state_limits.ipynb <state_limits.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
